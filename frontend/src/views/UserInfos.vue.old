<!--section where we can see the user's own profile-->

<template>
  <div class="user-infos">
    <TheHeader userName="$user.username"></TheHeader>
    <h1>Mon profil</h1>
    <br />
    <br />
    <div class="info-container">
      <div class="image-details">
        <h2>Profile Picture</h2>
        <img
          v-if="user.photo"
          :src="user.photo"
          alt=""
          class="profil-picture"
        />
        <img
          v-else
          src="../assets/img/anonymous.png"
          alt=""
          class="profil-picture"
        />
        <form action="">
          <label v-if="user.photo" for="avatar"
            >Update your profile picture
          </label>
          <label v-else for="avatar">Choisissez votre avatar: </label>

          <input
            type="file"
            id="avatar"
            name="avatar"
            accept="image/png, image/jpeg"
            class="btn"
          />
          <br /><br />
          <input
            type="submit"
            @click="changeImage"
            class="btn btn-submit"
            value="Envoyer"
          />
        </form>
      </div>

      <div class="details">
        <h2>My details</h2>

        <h3>
          {{ user.username }}
        </h3>

        <div class="select-role">
          <label>Votre poste: </label>
          <select type="select" class="select">
            <option valeur="default">{{ this.$store.state.user.role }}</option>
            <option valeur="ow">Employé</option>
            <option valeur="cs">Service client</option>
            <option valeur="hr">Ressources Humaines</option>
            <option valeur="ac">Comptabilité</option>
            <option valeur="Man">Management</option>
            <option valeur="Man">IT team</option>
          </select>
        </div>
        <br />
        <br />
        <form action="" class="bio">
          <label for="#username" class="bio-title">Bio </label>
          <br />
          <p v-if="this.$store.state.user.bio != 'null'">
            {{ this.$store.state.user.bio }}
          </p>
          <label for="textarea">Editez votre bio</label>
          <textarea name="bio" id="textarea" cols="55" rows="7" v-model="bio">
          </textarea>
          <br />
          <input
            type="submit"
            class="btn btn-submit2"
            value="Enregistrer"
            @click="changeImage"
          />
        </form>
        <br />
        <button class="danger" @click="deleteAccount">
          Supprimer ce compte
        </button>
      </div>
    </div>
  </div>
</template>

<script>
import TheHeader from "../components/TheHeader.vue";
import { mapState } from "vuex";

export default {
  data() {
    return {
      image: "",
      bio: "",
    };
  },
  components: {
    TheHeader: TheHeader,
  },
  computed: {
    ...mapState({user: 'userInfos'}),//   (['userInfos'])
  },
  mounted: function () {
    this.getUserInfos();
    if (
      //if the user is not connected his userId is -1 in the store
      this.$store.state.user.userId === -1 ||
      this.$store.state.user.userId == undefined
    ) {
      this.$router.push("/");
      return;
    }
  },
  methods: {
    changeImage: function (event) {
      //method to update the profile of the user
      event.preventDefault();
      this.$store
        .dispatch("getUserInfos", {
          userId: this.$store.state.user.userId,
          image: document.querySelector("input[type=file]").files[0],
          bio: this.bio || this.$store.state.user.bio,
          role: document.querySelector(".select").value,
        })
        .then(() => {
          this.getUserInfos();
        });
    },
    changeInfos: async function () {
      let userId = this.$store.state.user.userId;
      this.$store.dispatch("changeInfos", userId);
    },
    deleteAccount: async function () {
      let confirmation = confirm(
        "Etes-vous sur de vouloir supprimer ce compte ? Tous vos posts seront effacés !!"
      );

      if (confirmation) {
        let userId = this.$store.state.user.userId;
        this.$store
          .dispatch("deleteAccount", userId)
          .then(this.$store.commit("logout"))
          .then(this.$router.push("/"));
      }
    },
  },
};
</script>
<style lang="scss" scoped>
$color-primary: #fc2c04;
$color-secondary: #fad8d3;
$color-tertiary: #fdf0ee;

.user-infos {
  width: 100%;
  h1 {
    padding-top: 4rem;
  }
}
.info-container {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;

  .image-details {
    border-radius: 10px;
    padding: 2rem;
    margin-left: 5rem;
    height: 550px;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    background-color: $color-secondary;
    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
    @media screen and (max-width: 900px) {
      width: 470px;
      margin-left: 5rem;
      border-radius: 10px;
    }
    @media screen and (max-width: 500px) {
      width: 350px;
      margin-right: 5rem;
    }

    img {
      max-width: 20rem;
      max-height: 20rem;
      margin-top: 15px;
    }
    form {
      padding-top: 2rem;
    }
  }
  .details {
    border-radius: 10px;
    padding: 2rem;
    margin-right: 5rem;
    background-color: $color-tertiary;
    height: 550px;
    width: 450px;
    border-left: rgba(128, 128, 128, 0.493) 1px solid;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
    @media screen and (max-width: 900px) {
      width: 470px;
      margin-left: 5rem;
      border-radius: 10px;
      border-left: none;
      border-top: rgba(128, 128, 128, 0.493) 1px solid;
    }
    @media screen and (max-width: 500px) {
      width: 350px;
      margin-right: 5rem;
    }

    #username {
      height: 2rem;
      border-radius: 10px;
      font-weight: bold;
      font-size: 1rem;
    }
    .select-role {
      padding-top: 1rem;
      float: left;
      margin-top: 10px;
      @media screen and (max-width: 900px) {
        float: none;
      }
      .select {
        font-size: 105%;
      }
    }
    .bio {
      padding-top: 3rem;
      @media screen and (max-width: 900px) {
        label {
          display: none;
        }
      }
    }
    .bio-title {
      color: $color-primary;
      font-size: 1.3em;
    }
  }

  .btn-submit {
    background-color: white;
    height: 1.6rem;
    width: 50%;
    border-radius: 20px;
    color: $color-primary;
  }
  
  .btn-submit2 {
    background-color: white;
    height: 1.6rem;
    width: 50%;
    border-radius: 20px;
    color: $color-primary;
  }

  .danger {
    background-color: $color-primary;
    height: 2rem;
    width: 80%;
    border-radius: 20px;
    color: white;
  }
}

@media screen and (max-width: 900px) {
  .info-container {
    flex-direction: column;
    margin: 0;
    .image-details {
      margin-left: 0rem;
      margin-right: 0;
    }
    #textarea {
      width: 150px;
    }
  }
}

@media screen and (max-width: 500px) {
  .image-details {
    width: 250px;
    img {
      width: 10rem;
    }
  }
}
</style>
